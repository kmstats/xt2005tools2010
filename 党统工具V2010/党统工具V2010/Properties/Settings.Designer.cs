//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4206
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace com.echo.XT2005.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("党统工具V2010")]
        public string STR_TITLE {
            get {
                return ((string)(this["STR_TITLE"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("系统(&S)")]
        public string STR_MENU_SYSTEM {
            get {
                return ((string)(this["STR_MENU_SYSTEM"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("连接数据库(&L)")]
        public string STR_ACL_LINK {
            get {
                return ((string)(this["STR_ACL_LINK"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Driver={Kingbase ODBC driver};database=XT2007;server=LOCALHOST;port=55321;uid=SYS" +
            "TEM;pwd=MANAGER")]
        public string XT2007ConnectionString {
            get {
                return ((string)(this["XT2007ConnectionString"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("报表校核")]
        public string STR_TAB_RPTCHK {
            get {
                return ((string)(this["STR_TAB_RPTCHK"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("退出(&X)")]
        public string STR_ACL_EXIT {
            get {
                return ((string)(this["STR_ACL_EXIT"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("清除全选(&N)")]
        public string STR_AC_SELECTNONE {
            get {
                return ((string)(this["STR_AC_SELECTNONE"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("全选(&A)")]
        public string STR_AC_SELECTALL {
            get {
                return ((string)(this["STR_AC_SELECTALL"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("设置报告期")]
        public string STR_SETRPT {
            get {
                return ((string)(this["STR_SETRPT"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("报表模板")]
        public string STR_RPTTEMPLATE {
            get {
                return ((string)(this["STR_RPTTEMPLATE"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("报告期")]
        public string STR_RPTDURATION {
            get {
                return ((string)(this["STR_RPTDURATION"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("确定(&O)")]
        public string STR_OK {
            get {
                return ((string)(this["STR_OK"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("取消(&C)")]
        public string STR_CANCEL {
            get {
                return ((string)(this["STR_CANCEL"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("数据修复")]
        public string STR_REPAIRDATA {
            get {
                return ((string)(this["STR_REPAIRDATA"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsi=\"http://www.w3." +
            "org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <s" +
            "tring>UPDATE A01 SET A0159=\'5\' WHERE A0159=\'4\' AND A0000 IN ( SELECT A0000 FROM " +
            "C02 WHERE NOT (C0217 IS NULL OR C0217 = \'\') ) </string>\r\n  <string>DELETE FROM C" +
            "01 WHERE A0000 IN ( SELECT A01.A0000 FROM A01,C01 WHERE A01.A0000=C01.A0000 AND " +
            "(A0159=\'4\' OR A0159=\'5\') ORDER BY A0159) </string>\r\n  <string>UPDATE A01 SET A01" +
            "41 = NULL,A0144 = NULL WHERE (A0141 ISNULL OR TRIM(A0141)=\'\') AND NOT (A0144 ISN" +
            "ULL OR  TRIM(A0144) = \'\') OR NOT ((A0141 &gt;\'03\' AND A0141 &lt; \'12\' AND LENGTH" +
            "(A0141)=2) OR (A0141 ISNULL OR A0141=\'\')) </string>\r\n  <string>UPDATE C03 SET C0" +
            "323 = \'\' WHERE C0323  ISNULL </string>\r\n  <string>UPDATE A01 SET A0162=ISNULL((S" +
            "ELECT D1601A FROM D01,D16  WHERE D01.D0107=D16.D0107  AND D01.D0107=A0160 AND D0" +
            "1.D0107 IN  (SELECT D0107 FROM D16 GROUP BY D0107 HAVING COUNT(D0107)=1)),A0162)" +
            "  </string>\r\n  <string>UPDATE A01 SET A0159=\'7\' WHERE (A0159=\'4\' OR A0159=\'5\') A" +
            "ND A0000 IN ( SELECT A0000 FROM C09 WHERE (C0921 LIKE \'2%\') ) </string>\r\n  <stri" +
            "ng>UPDATE C03 SET C0323=\'\' WHERE A0000 IN  (SELECT A0000 FROM A01 WHERE A0159&lt" +
            ";&gt;\'6\') </string>\r\n  <string>DELETE FROM A01 WHERE OCTET_LENGTH(A0000)&gt;50 <" +
            "/string>\r\n  <string>UPDATE D16 SET SORTID=1 WHERE SORTID IS NULL </string>\r\n  <s" +
            "tring>UPDATE C03 SET C0304=ISNULL((SELECT C0201 FROM C02 WHERE C03.A0000=C02.A00" +
            "00 AND C0307=\'001\'),C0304) WHERE C0307=\'001\' </string>\r\n  <string>UPDATE C02 SET" +
            " C0257=ISNULL((SELECT A0160 FROM A01 WHERE A01.A0000=C02.A0000),C0257) WHERE C02" +
            "11=\'11111\' AND A0000 IN (SELECT A0000 FROM C03 WHERE C0307=\'001\') </string>\r\n</A" +
            "rrayOfString>")]
        public global::System.Collections.Specialized.StringCollection gsList {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["gsList"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>修复正式党员标识</string>
  <string>删除培养发展信息</string>
  <string>清除其他党团</string>
  <string>修正动态统计</string>
  <string>自动填写关系所在单位</string>
  <string>修复流入党员标识</string>
  <string>修正信息上报后变为历史党员</string>
  <string>删除不能显示详细信息人员</string>
  <string>修复组织数不统计</string>
  <string>新入党根据入党时间填写进入支部时间</string>
  <string>团员推优自动填写入党时所在党支部</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection gsTitleList {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["gsTitleList"]));
            }
        }
    }
}
